
{#
Copyright 2017-present Open Networking Foundation

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
#}


tosca_definitions_version: tosca_simple_yaml_1_0

description: created by platform-install

imports:
   - custom_types/addressmanagerservice.yaml
   - custom_types/addresspool.yaml
   - custom_types/slice.yaml
   - custom_types/site.yaml
   - custom_types/image.yaml
   - custom_types/flavor.yaml
   - custom_types/network.yaml
   - custom_types/networktemplate.yaml
   - custom_types/onosapp.yaml
   - custom_types/onosservice.yaml
   - custom_types/networkslice.yaml
   - custom_types/vspgwcservice.yaml
   - custom_types/vspgwcvendor.yaml
   - custom_types/vspgwuservice.yaml
   - custom_types/vspgwuvendor.yaml
   - custom_types/vmmeservice.yaml
   - custom_types/vmmevendor.yaml
   - custom_types/vhssservice.yaml
   - custom_types/vhssvendor.yaml
   - custom_types/vrouterservice.yaml
   - custom_types/vepcservice.yaml
   - custom_types/oaibbuservice.yaml
   - custom_types/oaibbuvendor.yaml
   - custom_types/servicedependency.yaml
   - custom_types/serviceinstancelink.yaml
   - custom_types/serviceinstanceattribute.yaml

topology_template:
  node_templates:

# site, image, fully created in deployment.yaml
    {{ site_name }}:
      type: tosca.nodes.Site
      properties:
        must-exist: true
        name: {{ site_name }}

# flavors
    m1.small:
      type: tosca.nodes.Flavor
      properties:
        name: m1.small
        must-exist: true
    m1.large:
      type: tosca.nodes.Flavor
      properties:
        name: m1.large
        must-exist: true
    m1.medium:
      type: tosca.nodes.Flavor
      properties:
        name: m1.medium
        must-exist: true
    m1.xlarge:
      type: tosca.nodes.Flavor
      properties:
        name: m1.xlarge
        must-exist: true

# images
    image-oai:
      type: tosca.nodes.Image
      properties:
        name: image-oai

 # OAI custom image
    develop-oai-bbu:
      type: tosca.nodes.Image
      properties:
        name: develop-oai-bbu

# ONOS_CORD, fully created in vtn.yaml
    service#ONOS_CORD:
      type: tosca.nodes.ONOSService
      properties:
        must-exist: true
        name: ONOS_CORD

# ONOS_Fabric, fully created in fabric.yaml
    service#ONOS_Fabric:
      type: tosca.nodes.ONOSService
      properties:
        must-exist: true
        name: ONOS_Fabric

# OAI BBU Service, no service instance, only create Service & Network
    service#oaibbu:
      type: tosca.nodes.OAIBBUService
      properties:
        name: oaibbu
        view_url: /admin/oaibbu/oaibbu/$id$/
        kind: oaibbu
        public_key: {{ lookup('file', config_cord_profile_dir + '/key_import/mcord_rsa.pub') }}
        private_key_fn: /opt/xos/services/oaibbu/keys/mcord_rsa
      artifacts:
        pubkey: /opt/cord_profile/key_import/mcord_rsa.pub

    {{ site_name }}_oaibbu:
      description: oaiBBU Service Slice
      type: tosca.nodes.Slice
      properties:
          name: {{ site_name }}_oaibbu
          default_isolation: vm
          network: noauto
      requirements:
          - site:
              node: mysite
              relationship: tosca.relationships.BelongsToOne
          - service:
              node: service#oaibbu
              relationship: tosca.relationships.BelongsToOne
          - default_image:
              node: develop-oai-bbu
              relationship: tosca.relationships.BelongsToOne
          - default_flavor:
              node: m1.large
              relationship: tosca.relationships.BelongsToOne

    oai_bbu:
      type: tosca.nodes.OAIBBUVendor
      properties:
        name: oai_bbu
      requirements:
        - image:
            node: develop-oai-bbu
            relationship: tosca.relationships.BelongsToOne
        - flavor:
            node: m1.large
            relationship: tosca.relationships.BelongsToOne

# vMME Service
    service#vmme:
      type: tosca.nodes.VMMEService
      properties:
          name: vmme
          public_key: {{ lookup('file', config_cord_profile_dir + '/key_import/mcord_rsa.pub') }}
          private_key_fn: /opt/xos/services/vmme/keys/mcord_rsa
      artifacts:
          pubkey: /opt/cord_profile/key_import/mcord_rsa.pub

    {{ site_name }}_vmme:
      description: vMME Service Slice
      type: tosca.nodes.Slice
      properties:
          name: {{ site_name }}_vmme
          default_isolation: vm
          network: noauto
      requirements:
          - site:
              node: mysite
              relationship: tosca.relationships.BelongsToOne
          - service:
              node: service#vmme
              relationship: tosca.relationships.BelongsToOne
          - default_image:
              node: image-oai
              relationship: tosca.relationships.BelongsToOne
          - default_flavor:
              node: m1.medium
              relationship: tosca.relationships.BelongsToOne

    oai_mme:
      type: tosca.nodes.VMMEVendor
      properties:
        name: oai_mme
      requirements:
        - image:
            node: image-oai
            relationship: tosca.relationships.BelongsToOne
        - flavor:
            node: m1.medium
            relationship: tosca.relationships.BelongsToOne

#vSPGWC Service
    service#vspgwc:
      type: tosca.nodes.VSPGWCService
      properties:
          name: vspgwc
          public_key: {{ lookup('file', config_cord_profile_dir + '/key_import/mcord_rsa.pub') }}
          private_key_fn: /opt/xos/services/vspgwc/keys/mcord_rsa
      artifacts:
          pubkey: /opt/cord_profile/key_import/mcord_rsa.pub

    {{ site_name }}_vspgwc:
      description: vSPGW-C slice
      type: tosca.nodes.Slice
      properties:
          name: {{ site_name }}_vspgwc
          default_isolation: vm
          network: noauto
      requirements:
          - site:
              node: mysite
              relationship: tosca.relationships.BelongsToOne
          - service:
              node: service#vspgwc
              relationship: tosca.relationships.BelongsToOne
          - default_image:
              node: image-oai
              relationship: tosca.relationships.BelongsToOne
          - default_flavor:
              node: m1.medium
              relationship: tosca.relationships.BelongsToOne

    oai_vspgwc:
      type: tosca.nodes.VSPGWCVendor
      properties:
        name: oai_vspgwc
      requirements:
        - image:
            node: image-oai
            relationship: tosca.relationships.BelongsToOne
        - flavor:
            node: m1.medium
            relationship: tosca.relationships.BelongsToOne


#vSPGWU Service
    service#vspgwu:
      type: tosca.nodes.VSPGWUService
      properties:
          name: vspgwu
          public_key: {{ lookup('file', config_cord_profile_dir + '/key_import/mcord_rsa.pub') }}
          private_key_fn: /opt/xos/services/vspgwu/keys/mcord_rsa
      artifacts:
          pubkey: /opt/cord_profile/key_import/mcord_rsa.pub

    {{ site_name }}_vspgwu:
      description: vSPGW-U slice
      type: tosca.nodes.Slice
      properties:
          name: {{ site_name }}_vspgwu
          default_isolation: vm
          network: noauto
      requirements:
          - site:
              node: mysite
              relationship: tosca.relationships.BelongsToOne
          - service:
              node: service#vspgwu
              relationship: tosca.relationships.BelongsToOne
          - default_image:
              node: image-oai
              relationship: tosca.relationships.BelongsToOne
          - default_flavor:
              node: m1.large
              relationship: tosca.relationships.BelongsToOne

    oai_vspgwu:
      type: tosca.nodes.VSPGWUVendor
      properties:
        name: oai_vspgwu
      requirements:
        - image:
            node: image-oai
            relationship: tosca.relationships.BelongsToOne
        - flavor:
            node: m1.large
            relationship: tosca.relationships.BelongsToOne

# vHSS service
    service#vhss:
      type: tosca.nodes.VHSSService
      properties:
          name: vhss
          kind: vEPC
          public_key: {{ lookup('file', config_cord_profile_dir + '/key_import/mcord_rsa.pub') }}
          private_key_fn: /opt/xos/services/vhss/keys/mcord_rsa
      artifacts:
          pubkey: /opt/cord_profile/key_import/mcord_rsa.pub

    {{ site_name }}_vhss:
      description: vHSS Service Slice
      type: tosca.nodes.Slice
      properties:
          name: {{ site_name }}_vhss
          default_isolation: vm
          network: noauto
      requirements:
          - site:
              node: mysite
              relationship: tosca.relationships.BelongsToOne
          - service:
              node: service#vhss
              relationship: tosca.relationships.BelongsToOne
          - default_image:
              node: image-oai
              relationship: tosca.relationships.BelongsToOne
          - default_flavor:
              node: m1.small
              relationship: tosca.relationships.BelongsToOne

    oai_hss:
      type: tosca.nodes.VHSSVendor
      properties:
        name: sprint_hss
      requirements:
        - image:
            node: image-oai
            relationship: tosca.relationships.BelongsToOne
        - flavor:
            node: m1.small
            relationship: tosca.relationships.BelongsToOne

# vEPC Service
    service#vepc:
      type: tosca.nodes.VEPCService
      properties:
          name: vepc
          public_key: {{ lookup('file', config_cord_profile_dir + '/key_import/mcord_rsa.pub') }}
          private_key_fn: /opt/xos/services/epc-service/keys/mcord_rsa
      artifacts:
          pubkey: /opt/cord_profile/key_import/mcord_rsa.pub

# vRouter Service Related
    service#vrouter:
      type: tosca.nodes.VRouterService
      properties:
        name: vrouter
        rest_hostname: onos-fabric.{{ site_suffix }}
        rest_port: 8181
        rest_user: onos
        rest_pass: rocks

    vRouter_ONOS_app:
      type: tosca.nodes.ONOSApp
      requirements:
        - owner:
            node: service#ONOS_Fabric
            relationship: tosca.relationships.BelongsToOne
      properties:
        name: vRouter_ONOS_app
        dependencies: org.onosproject.fpm

    vRouter_ONOS_app_autogenerate:
      type: tosca.nodes.ServiceInstanceAttribute
      requirements:
        - service_instance:
            node: vRouter_ONOS_app
            relationship: tosca.relationships.BelongsToOne
      properties:
          name: autogenerate
          value: vrouter-network-cfg

    vRouter_ONOS_app_ONOS_CORD:
        type: tosca.nodes.ServiceInstanceLink
        requirements:
          - provider_service_instance:
              node: vRouter_ONOS_app
              relationship: tosca.relationships.BelongsToOne
          - subscriber_service:
              node: service#vrouter
              relationship: tosca.relatinoships.BelongsToOne
