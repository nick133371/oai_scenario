{#
  Copyright 2017-present Open Networking Foundation

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
#}

tosca_definitions_version: tosca_simple_yaml_1_0

description: created by platform-install, need to add M-CORD services later

imports:
   - custom_types/xos.yaml
   - custom_types/addressmanager.yaml

topology_template:
  node_templates:

# site, image, fully created in deployment.yaml

    {{ site_name }}:
      type: tosca.nodes.Site

# ONOS_Fabric, fully created in fabric.yaml
    service#ONOS_Fabric:
      type: tosca.nodes.ONOSService
      properties:
        no-delete: true
        no-create: true
        no-update: true

    service#addressmanager:
      type: tosca.nodes.AddressManagerService
      requirements:
        - addresses_public:
            node: addresses_public
            relationship: tosca.relationships.ProvidesAddresses
        - addresses_vmme:
            node: addresses_vmme
            relationship: tosca.relationships.ProvidesAddresses
        - addresses_vhss:
            node: addresses_vhss
            relationship: tosca.relationships.ProvidesAddresses
        - addresses_vspgwc:
            node: addresses_vspgwc
            relationship: tosca.relationships.ProvidesAddresses
        - addresses_vspgwu:
            node: addresses_vspgwu
            relationship: tosca.relationships.ProvidesAddresses

    service#vrouter:
      type: tosca.nodes.VRouterService
      properties:
        view_url: /admin/vrouter/vrouterservice/$id$/
        replaces: service_vrouter

    addresses_public:
      type: tosca.nodes.AddressPool
      properties:
        addresses: 10.8.1.0/24
        gateway_ip: 10.8.1.1
        gateway_mac: a4:23:05:06:01:01

    addresses_vmme:
      type: tosca.nodes.AddressPool
      properties:
        addresses: 10.0.6.0/24
        gateway_ip: 10.0.6.1
        gateway_mac: aa:bb:cc:dd:ee:01

    addresses_vhss:
      type: tosca.nodes.AddressPool
      properties:
        addresses: 10.0.7.0/24
        gateway_ip: 10.0.7.1
        gateway_mac: aa:bb:cc:dd:ee:02

    addresses_vspgwc:
      type: tosca.nodes.AddressPool
      properties:
        addresses: 10.0.8.0/24
        gateway_ip: 10.0.8.1
        gateway_mac: aa:bb:cc:dd:ee:03

    addresses_vspgwu:
      type: tosca.nodes.AddressPool
      properties:
        addresses: 10.0.9.0/24
        gateway_ip: 10.0.9.1
        gateway_mac: aa:bb:cc:dd:ee:04

    vRouter_ONOS_app:
      type: tosca.nodes.ONOSvRouterApp
      requirements:
        - onos_tenant:
            node: service#ONOS_Fabric
            relationship: tosca.relationships.TenantOfService
        - vrouter_service:
            node: service#vrouter
            relationship: tosca.relationships.UsedByService
      properties:
        dependencies: org.onosproject.fpm
        autogenerate: vrouter-network-cfg

    in#lanside:
      type: tosca.nodes.InterfaceType
      properties:
         direction: in

    out#lanside:
      type: tosca.nodes.InterfaceType
      properties:
         direction: out

    in#wanside:
      type: tosca.nodes.InterfaceType
      properties:
         direction: in

    out#wanside:
      type: tosca.nodes.InterfaceType
      properties:
         direction: out

    addressmanager_wanside:
      type: tosca.nodes.ServiceInterface
      requirements:
        - service:
            node: service#addressmanager
            relationship: tosca.relationships.MemberOfService
        - interface:
            node: in#wanside
            relationship: tosca.relationships.IsType
{#
# Define Private Network Template
    private_network_template:
      type: tosca.nodes.NetworkTemplate
      properties:
          visibility: private
          translation: none
          vtn_kind: PRIVATE

# Define Public Network Template
    public_network_template:
      type: tosca.nodes.NetworkTemplate
      properties:
          visibility: public
          translation: none
          vtn_kind: PUBLIC

# vMME Private Network
    vmme_network:
      type: tosca.nodes.network.Network
      properties:
          ip_version: 4
          cidr: 10.0.6.0/24
      requirements:
          - network_template:
              node: private_network_template
              relationship: tosca.relationships.UsesNetworkTemplate
          - owner:
              node: {{ site_name }}_vmme
              relationship: tosca.relationships.MemberOfSlice

# vHSS Private Network
    vhss_network:
      type: tosca.nodes.network.Network
      properties:
          ip_version: 4
          cidr: 10.0.7.0/24
      requirements:
          - network_template:
              node: private_network_template
              relationship: tosca.relationships.UsesNetworkTemplate
          - owner:
              node: {{ site_name }}_vhss
              relationship: tosca.relationships.MemberOfSlice

# vSPGWC Private Network
    vspgwc_network:
      type: tosca.nodes.network.Network
      properties:
          ip_version: 4
          cidr: 10.0.8.0/24
      requirements:
          - network_template:
              node: private_network_template
              relationship: tosca.relationships.UsesNetworkTemplate
          - owner:
              node: {{ site_name }}_vspgwc
              relationship: tosca.relationships.MemberOfSlice

# vSPGWU Private Network
    vspgwu_network:
      type: tosca.nodes.network.Network
      properties:
          ip_version: 4
          cidr: 10.0.9.0/24
      requirements:
          - network_template:
              node: private_network_template
              relationship: tosca.relationships.UsesNetworkTemplate
          - owner:
              node: {{ site_name }}_vspgwu
              relationship: tosca.relationships.MemberOfSlice
#}